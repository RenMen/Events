@model CGEvents.Models.Ams

@{
    ViewData["Title"] = "Index";
}

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h2>Invitees</h2>

    <p>
        <a asp-action="Create">Add New Invitee</a>
    </p>
</div>

<div class="table-responsive">

    @(Html.Kendo().Grid<CGEvents.Models.Ams>()
            .Name("grdInvitee")
                .Columns(columns =>
                {
                    columns.Bound(p => p.Fname).Filterable(false).Title("First Name");
                    columns.Bound(p => p.Lname).Filterable(false).Title("Last Name");
                    columns.Bound(p => p.EmailId).Filterable(false).Title("Email ID");
                    columns.Bound(p => p.Position).Filterable(false).Title("Position");
                    columns.Bound(p => p.Company).Filterable(false).Title("Company");
                    columns.Bound(p => p.IndvDeadline).Filterable(false).Title("Deadline");
                    columns.Bound(p => p.Id).Title(" ").ClientTemplate("<a href='" + Url.Action("Edit", "Invitee") + "/#=Id#'><span class='btn btn-primary'>Edit</span></a>");

    })

                .Pageable()
                .Sortable()
                .Scrollable()
                .Filterable()                                         
                .HtmlAttributes(new { style = "height:550px;" })
                .DataSource(dataSource => dataSource
                    .Ajax()
                    .ServerOperation(false)
                    .PageSize(20)                                              
                    .Read(read => read.Action("ReadInvitees", "Invitee").Data("getUrlParameter") )
                                              
                )
    )
</div>
<script type="text/javascript">
    $(function () {
        //Notice that the Name() of the Grid is used to get its client-side instance.
        var grid = $("#grdInvitee").data("kendoGrid");

    });

    function getUrlParameter() {
        var name = 'eid';
        name = name.replace(/[\[]/, '\\[').replace(/[\]]/, '\\]');
        var regex = new RegExp('[\\?&]' + name + '=([^&#]*)');
        var results = regex.exec(location.search);

        if (results === null) {
            document.location.href = "/Events";
          }
        else {
            results = results === null ? { eid: null } : { eid: decodeURIComponent(results[1].replace(/\+/g, ' ')) };
            return results;
        }


    };

</script>