@model CGEvents.Models.EventMaster

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>EventMaster</h4>
<hr />
<div class="row">
    <form method="post">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" asp-for="EventId" />
        <div class="form-group shadow-lg p-3 mb-3 bg-white rounded-CG">

            <label asp-for="EventName" class="control-label"></label>
            <input asp-for="EventName" class="form-control" />
            <span asp-validation-for="EventName" class="text-danger"></span>
        </div>

        <div class="form-group shadow-lg p-3 mb-3 bg-white rounded-CG">
            <label asp-for="EventDispName" class="control-label"></label>
            <input asp-for="EventDispName" class="form-control" />
            <span asp-validation-for="EventDispName" class="text-danger"></span>
        </div>

        <div class="form-group shadow-lg p-3 mb-3 bg-white rounded-CG">
            <div class="row ">
                <div class="col-lg-4">

                    <label asp-for="EventDate" class="control-label d-block">Start Date and Time</label>

                    @(Html.Kendo().DateTimePicker().Name("EventDate")
                        .Max(DateTime.Now.AddMonths(1))
                        .Value(Model.EventDate)
                        .Events(y =>
                        {
                            y.Change("startChange");
                            y.Open("startOpen");


                        })
                        .HtmlAttributes(new { style = "width: 100%" })
                        .HtmlAttributes(new { onkeydown = "javascript:return false;" })

                    )

                    <span asp-validation-for="EventDate" class="text-danger"></span>
                </div>


                <div class="col-lg-4">

                    <label asp-for="EventDateTo" class="control-label d-block ">End Date and Time</label>

                    @(Html.Kendo().DateTimePicker().Name("EventDateTo")
                        .Value(Model.EventDateTo)
                        .Min(DateTime.Now.AddMonths(-1))
                        .Events(y =>
                        {
                            y.Change("endChange");
                            y.Open("endOpen");
                        })
                        .HtmlAttributes(new { style = "width: 100%" })
                        .HtmlAttributes(new { onkeydown = "javascript:return false;" })
                    )

                    <span asp-validation-for="EventDateTo" class="text-danger"></span>
                </div>

                <div class="col-lg-4">
                   

                        <label asp-for="FormDeadline" class="control-label d-block"></label>

                            @(Html.Kendo().DateTimePicker()
                                    .Name("FormDeadline")
                                    .Value(Model.FormDeadline)
                                    .Min(DateTime.Now.AddMonths(-1))
                                    .Events(y =>
                                    {
                                        y.Change("dlChange");
                                        y.Open("dlOpen");
                                    })
                                        .HtmlAttributes(new { style = "width: 100%" })
                                        .HtmlAttributes(new { onkeydown = "javascript:return false;" })

                        )
                        <span asp-validation-for="FormDeadline" class="text-danger"></span>
                </div>
            </div>
        </div>

        <div class="form-group onoffswitch">
            @*@Html.CheckBox("IsActive", Model.IsActive.Value ?? false)*@
            @*@Html.CheckBoxFor(m => m.IsActive.Value, new { @class = "onoffswitch-checkbox", id = "IsActive" })*@
            @Html.CheckBox("isActive", Model.IsActive.HasValue ? Model.IsActive : false, new { @class = "onoffswitch-checkbox"})
            
            <label class="onoffswitch-label" for="isActive"></label>
        </div>

        <div class="form-group shadow-lg p-3 mb-3 bg-white rounded-CG">

            <label asp-for="Subject" class="control-label">Subject Line</label>
            <input asp-for="Subject" class="form-control" />
            <span asp-validation-for="Subject" class="text-danger"></span>
        </div>

        <div class="form-group shadow-lg p-3 mb-3 bg-white rounded-CG">
            <label asp-for="MailHeader" class="control-label">Upload and Insert Creative</label>
            @(Html.Kendo().Editor()
                        .Encoded(false)
                        .Name("MailHeader")
                        .HtmlAttributes(new { style = "height:350px" })
                        .Tools(tools => tools
                        .Clear()
                        .CreateLink().Unlink()
                        .InsertImage()
                        .InsertFile()
                        .TableEditing()
                        .ViewHtml()
                        .Print()
                        .FontName(fonts => fonts
                        .Add("Arial", "Arial")
                        .Add("Calibry", "Calibry")
                        .Add("Courier New", "Courier New")
                        .Add("Lucida Console", "Lucida Console")
                        .Add("Georgia", "Georgia")
                        .Add("Impact", "Impact")
                        .Add("Tohoma", "Tohoma")
                        .Add("Times New Roman", "Times New Roman")
                        .Add("Trebuchet", "Trebuchet")
                        .Add("Verdana", "Verdana")
                    )
                        )
                        .ImageBrowser(imageBrowser => imageBrowser
                            .Image("~/shared/UserFiles/Images/{0}")
                            .Read("Read", "ImageBrowser")
                            .Create("Create", "ImageBrowser")
                            .Destroy("Destroy", "ImageBrowser")
                            .Upload("Upload", "ImageBrowser")
                        )
                        .FileBrowser(fileBrowser => fileBrowser
                            .File("~/shared/UserFiles/Images/{0}")
                            .Read("Read", "FileBrowser")
                            .Create("Create", "FileBrowser")
                            .Destroy("Destroy", "FileBrowser")
                            .Upload("Upload", "FileBrowser")
                        )

                            .Value(@<text>
                            <partial name="_emailtemplate" />
                        </text>)
            )
            <span asp-validation-for="MailHeader" class="text-danger"></span>

        </div>


        <div class="form-group shadow-lg p-3 mb-3 bg-white rounded-CG">
            <label asp-for="MailBody" class="control-label">Covering letter (If any)</label>
            @(Html.Kendo().Editor()
                .Encoded(false)
                    .Name("MailBody")
                    .HtmlAttributes(new { style = "height:200px" })
                    .Tools(tools => tools
                    .Clear()
                    .Bold().Italic().Underline().Strikethrough()
                    .JustifyLeft().JustifyCenter().JustifyRight().JustifyFull()
                    .InsertUnorderedList().InsertOrderedList()
                    .Outdent().Indent()
                    .CreateLink().Unlink()
                    .InsertImage()
                    .InsertFile()
                    .SubScript()
                    .SuperScript()
                    .TableEditing()
                    .ViewHtml()
                    .Formatting()
                    .CleanFormatting()
                    .FontName()
                    .FontSize()
                    .ForeColor().BackColor()
                    .Print()
                    .FontName(fonts => fonts
                    .Add("Arial", "Arial")
                    .Add("Calibry", "Calibry")
                    .Add("Courier New", "Courier New")
                    .Add("Lucida Console", "Lucida Console")
                    .Add("Georgia", "Georgia")
                    .Add("Impact", "Impact")
                    .Add("Tohoma", "Tohoma")
                    .Add("Times New Roman", "Times New Roman")
                    .Add("Trebuchet", "Trebuchet")
                    .Add("Verdana", "Verdana")
                )
                    )

                        .Value(@<text>

                    </text>)
            )
            <span asp-validation-for="MailBody" class="text-danger"></span>
        </div>
        <div class="form-group shadow-lg p-3 mb-3 bg-white rounded-CG">
            <label asp-for="MailSignature" class="control-label">Signature</label>
            @(Html.Kendo().Editor()
                                                         .Encoded(false)
                                .Name("MailSignature")
                                .HtmlAttributes(new { style = "height:200px" })
                                .Tools(tools => tools
                                .Clear()
                                .Bold().Italic().Underline().Strikethrough()
                                .CreateLink().Unlink()
                                .ViewHtml()
                                .Formatting()
                                .CleanFormatting()
                                .FontName()
                                .FontSize()
                                .ForeColor().BackColor()
                                .FontName(fonts => fonts
                                .Add("Arial", "Arial")
                                .Add("Calibry", "Calibry")
                                .Add("Courier New", "Courier New")
                                .Add("Lucida Console", "Lucida Console")
                                .Add("Georgia", "Georgia")
                                .Add("Impact", "Impact")
                                .Add("Tohoma", "Tohoma")
                                .Add("Times New Roman", "Times New Roman")
                                .Add("Trebuchet", "Trebuchet")
                                .Add("Verdana", "Verdana")
                            )
                                .Snippets(snippets => snippets
                                .Add("Walid Yared", "<p>Regards,<b><br /> <br />Walid Yared ," +
                                "<br /> Chief Marketing Officer  </b>" +
                                "<br /> Choueiri Group Building  " +
                                "<br /> Media City, Knowledge Village " +
                                "<br /> P.O.Box: 21816 - Dubai - U.A.E. " +
                                "<br /> Tel:  +971 4 454 54 54 | Fax:  +971 4 454 54 44 " +
                                "<br /> E - mail: <a href='mailto:wyared.mr@choueirigroup.com'> wyared.mr@choueirigroup.com </a>| <a href = 'www.choueirigroup.com'> www.choueirigroup.com </a> </p>")
                                .Add("Paula", "<p>Regards,<b><br /><br /> Paula Beainy ," +
                                "<br /> PA & Events Manager  </b>" +
                                "<br /> Choueiri Group Building  " +
                                "<br /> Media City, Knowledge Village " +
                                "<br /> P.O.Box: 21816 - Dubai - U.A.E. " +
                                "<br /> Tel:  +971 4 454 54 54 | Fax:  +971 4 454 54 44 " +
                                "<br/> Mob: +971 52 6932733" +
                                "<br /> E - mail: <a href='mailto:pbeainy.mr@choueirigroup.com'> pbeainy.mr@choueirigroup.com </a>| <a href = 'www.choueirigroup.com'> www.choueirigroup.com </a> </p>")))
                                .Value(@<text>

                                                                            </text>)
            )
            <span asp-validation-for="MailSignature" class="text-danger"></span>
        </div>

        <div class="form-group shadow-lg p-3 mb-3 bg-white rounded-CG">
            <label asp-for="Venue" class="control-label"></label>
            <input asp-for="Venue" class="form-control" />
            <span asp-validation-for="Venue" class="text-danger"></span>
        </div>
        <hr />
        <div class="form-group">
            <input type="submit" value="Modify" class="btn btn-primary" />
        </div>
        <hr />
    </form>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
<script>

    function startChange() {
        var endPicker = $("#EventDateTo").data("kendoDateTimePicker"),
            startDate = this.value();
        var dlPicker = $("#FormDeadline").data("kendoDateTimePicker");


        if (startDate) {
            startDate = new Date(startDate);
            startDate.setHours(startDate.getHours() + 1);
            //startDate.setDate(startDate.getDate() + 1);
            endPicker.min(startDate);
            dlPicker.min(startDate);
        }
        checkDlRange();
    }

    function startOpen() {
        var startPicker = $("#EventDate").data("kendoDateTimePicker"),
        endPicker = $("#EventDateTo").data("kendoDateTimePicker"),
            endDate = endPicker.value();
        if (endDate) {
            endDate = new Date(endDate);
            endDate.setHours(endDate.getHours() - 1);
            //endDate.setDate(endDate.getDate() - 1);
            startPicker.max(endDate);
           
        }
    }


    function endChange() {
        var startPicker = $("#EventDate").data("kendoDateTimePicker"),
            dlPicker = $("#FormDeadline").data("kendoDateTimePicker"),
            endDate = this.value();

        if (endDate) {
            endDate = new Date(endDate);
            endDate.setHours(endDate.getHours() - 1);
            //endDate.setDate(endDate.getDate() - 1);
            startPicker.max(endDate);
            dlPicker.max(endDate);
        }
        checkDlRange();
    }
    function endOpen() {
        var startPicker = $("#EventDate").data("kendoDateTimePicker"),
            endPicker = $("#EventDateTo").data("kendoDateTimePicker"),
            startDate = startPicker.value();
        if (startDate) {
            startDate = new Date(startDate);
            startDate.setHours(startDate.getHours() + 1);
            //startDate.setDate(startDate.getDate() + 1);
            endPicker.min(startDate);
            
        }
    }

    function dlChange() {
        var startPicker = $("#EventDate").data("kendoDateTimePicker"),
            endDate = this.value();

        if (endDate) {
            endDate = new Date(endDate);
            endDate.setHours(endDate.getHours() - 1);
            //endDate.setDate(endDate.getDate() - 1);
            startPicker.max(endDate);
        }
    }


    function checkDlRange() {
        var startPicker = $("#EventDate").data("kendoDateTimePicker"),
            endPicker = $("#EventDateTo").data("kendoDateTimePicker"),
            dlPicker = $("#FormDeadline").data("kendoDateTimePicker");
        startDate = startPicker.value();
        endDate = endPicker.value();
        dlDate = dlPicker.value();

        if (endDate && startDate) {
            endDate = new Date(endDate);
            endDate.setHours(endDate.getHours() - 1);

            startDate = new Date(startDate);
            startDate.setHours(startDate.getHours() + 1);
            dlDate = new Date(dlDate);

            if (dlDate < startDate || dlDate > endDate) {
                $("#FormDeadline").data("kendoDateTimePicker").value("");
            }

        }
    }


    function dlOpen() {
        var startPicker = $("#EventDate").data("kendoDateTimePicker"),
            endPicker = $("#EventDateTo").data("kendoDateTimePicker"),
            dlPicker = $("#FormDeadline").data("kendoDateTimePicker");
        startDate = startPicker.value();
        endDate = endPicker.value();


        if (endDate && startDate) {
            endDate = new Date(endDate);
            endDate.setHours(endDate.getHours() - 1);

            startDate = new Date(startDate);
            startDate.setHours(startDate.getHours() + 1);

            //endDate.setDate(endDate.getDate() - 1);
            dlPicker.max(endDate);
            dlPicker.min(startDate);
        }
    }

</script>
